name: Go

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version-file: 'go.mod'

    - name: Build
      run: go build -v ./...

    - name: Test
      run: go test -race -v $(go list ./... | grep -v /e2e/test/)

    - name: E2E Test
      run: go test -v $(go list ./e2e/test/...)

    - name: Goroutine leak detector
      run: go test -c -o tests && for test in $(go test -list . | grep -E "^(Test|Example)"); do ./tests -test.run "^$test\$" &>/dev/null && echo -e "$test passed\n" || echo -e "$test failed\n"; done

    - uses: mlugg/setup-zig@475c97be87a204e6c57fe851f970bd02005a70f0 # v2.0.4

    - name: Build for Windows
      run: CC="zig cc -lc -target x86_64-windows" CXX="zig c++ -lc -target x86_64-windows" CGO_ENABLED=1 GOOS=windows GOARCH=amd64 go build -v ./...

    - name: Build for linux/arm64
      run: CGO_ENABLED=1 CC="zig cc -lc -target aarch64-linux-musl" CXX="zig c++ -lc -target aarch64-linux-musl" GOOS=linux GOARCH=arm64 go build -v ./...
